apiVersion: v1
kind: Namespace
metadata:
  name: jellyfin
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-pv
  namespace: jellyfin
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/pool/docker/jellyfin"  
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-pvc
  namespace: jellyfin
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: jellyfin/jellyfin:latest
        ports:
        - containerPort: 8096
        volumeMounts:
        - name: config
          mountPath: /config
        - name: cache
          mountPath: /cache
        - name: media
          mountPath: /media
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-pvc
      - name: cache
        emptyDir: {}
      - name: media
        hostPath:
          path: "/var/pool/docker/jellyfin/media"  
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  namespace: jellyfin
spec:
  selector:
    app: jellyfin
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8096
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-ingress
  namespace: jellyfin
spec:
  ingressClassName: traefik
  rules:
  - host: jellyfin.home.box
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyfin-service
            port:
              number: 80